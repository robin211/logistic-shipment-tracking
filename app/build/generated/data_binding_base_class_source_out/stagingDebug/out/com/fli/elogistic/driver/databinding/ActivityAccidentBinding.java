// Generated by view binder compiler. Do not edit!
package com.fli.elogistic.driver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.fli.elogistic.driver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAccidentBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout addFotoBarangBukti;

  @NonNull
  public final TextView barangBukti;

  @NonNull
  public final ImageView bgToolbar;

  @NonNull
  public final ImageView btnBack;

  @NonNull
  public final TextView btnKirim;

  @NonNull
  public final ImageView cameraBigBarangBukti;

  @NonNull
  public final ImageView cameraSmallBarangBukti;

  @NonNull
  public final EditText etLainnya;

  @NonNull
  public final RelativeLayout layout;

  @NonNull
  public final LinearLayout listItem;

  @NonNull
  public final RecyclerView rvBarangBukti;

  @NonNull
  public final TextView title;

  @NonNull
  public final RelativeLayout toolbar;

  @NonNull
  public final TextView txt1;

  @NonNull
  public final TextView txt2;

  @NonNull
  public final View v6;

  private ActivityAccidentBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout addFotoBarangBukti, @NonNull TextView barangBukti,
      @NonNull ImageView bgToolbar, @NonNull ImageView btnBack, @NonNull TextView btnKirim,
      @NonNull ImageView cameraBigBarangBukti, @NonNull ImageView cameraSmallBarangBukti,
      @NonNull EditText etLainnya, @NonNull RelativeLayout layout, @NonNull LinearLayout listItem,
      @NonNull RecyclerView rvBarangBukti, @NonNull TextView title, @NonNull RelativeLayout toolbar,
      @NonNull TextView txt1, @NonNull TextView txt2, @NonNull View v6) {
    this.rootView = rootView;
    this.addFotoBarangBukti = addFotoBarangBukti;
    this.barangBukti = barangBukti;
    this.bgToolbar = bgToolbar;
    this.btnBack = btnBack;
    this.btnKirim = btnKirim;
    this.cameraBigBarangBukti = cameraBigBarangBukti;
    this.cameraSmallBarangBukti = cameraSmallBarangBukti;
    this.etLainnya = etLainnya;
    this.layout = layout;
    this.listItem = listItem;
    this.rvBarangBukti = rvBarangBukti;
    this.title = title;
    this.toolbar = toolbar;
    this.txt1 = txt1;
    this.txt2 = txt2;
    this.v6 = v6;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAccidentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAccidentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_accident, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAccidentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_foto_barang_bukti;
      LinearLayout addFotoBarangBukti = rootView.findViewById(id);
      if (addFotoBarangBukti == null) {
        break missingId;
      }

      id = R.id.barang_bukti;
      TextView barangBukti = rootView.findViewById(id);
      if (barangBukti == null) {
        break missingId;
      }

      id = R.id.bg_toolbar;
      ImageView bgToolbar = rootView.findViewById(id);
      if (bgToolbar == null) {
        break missingId;
      }

      id = R.id.btn_back;
      ImageView btnBack = rootView.findViewById(id);
      if (btnBack == null) {
        break missingId;
      }

      id = R.id.btn_kirim;
      TextView btnKirim = rootView.findViewById(id);
      if (btnKirim == null) {
        break missingId;
      }

      id = R.id.camera_big_barang_bukti;
      ImageView cameraBigBarangBukti = rootView.findViewById(id);
      if (cameraBigBarangBukti == null) {
        break missingId;
      }

      id = R.id.camera_small_barang_bukti;
      ImageView cameraSmallBarangBukti = rootView.findViewById(id);
      if (cameraSmallBarangBukti == null) {
        break missingId;
      }

      id = R.id.et_lainnya;
      EditText etLainnya = rootView.findViewById(id);
      if (etLainnya == null) {
        break missingId;
      }

      RelativeLayout layout = (RelativeLayout) rootView;

      id = R.id.list_item;
      LinearLayout listItem = rootView.findViewById(id);
      if (listItem == null) {
        break missingId;
      }

      id = R.id.rv_barang_bukti;
      RecyclerView rvBarangBukti = rootView.findViewById(id);
      if (rvBarangBukti == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = rootView.findViewById(id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      RelativeLayout toolbar = rootView.findViewById(id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.txt1;
      TextView txt1 = rootView.findViewById(id);
      if (txt1 == null) {
        break missingId;
      }

      id = R.id.txt2;
      TextView txt2 = rootView.findViewById(id);
      if (txt2 == null) {
        break missingId;
      }

      id = R.id.v6;
      View v6 = rootView.findViewById(id);
      if (v6 == null) {
        break missingId;
      }

      return new ActivityAccidentBinding((RelativeLayout) rootView, addFotoBarangBukti, barangBukti,
          bgToolbar, btnBack, btnKirim, cameraBigBarangBukti, cameraSmallBarangBukti, etLainnya,
          layout, listItem, rvBarangBukti, title, toolbar, txt1, txt2, v6);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
