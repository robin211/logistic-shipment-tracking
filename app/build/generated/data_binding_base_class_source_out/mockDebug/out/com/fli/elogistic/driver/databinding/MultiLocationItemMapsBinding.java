// Generated by view binder compiler. Do not edit!
package com.fli.elogistic.driver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.fli.elogistic.driver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MultiLocationItemMapsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnMaps;

  @NonNull
  public final TextView txtAddress;

  @NonNull
  public final TextView txtLocation;

  private MultiLocationItemMapsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnMaps, @NonNull TextView txtAddress, @NonNull TextView txtLocation) {
    this.rootView = rootView;
    this.btnMaps = btnMaps;
    this.txtAddress = txtAddress;
    this.txtLocation = txtLocation;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MultiLocationItemMapsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MultiLocationItemMapsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.multi_location_item_maps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MultiLocationItemMapsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_maps;
      ImageView btnMaps = rootView.findViewById(id);
      if (btnMaps == null) {
        break missingId;
      }

      id = R.id.txt_address;
      TextView txtAddress = rootView.findViewById(id);
      if (txtAddress == null) {
        break missingId;
      }

      id = R.id.txt_location;
      TextView txtLocation = rootView.findViewById(id);
      if (txtLocation == null) {
        break missingId;
      }

      return new MultiLocationItemMapsBinding((ConstraintLayout) rootView, btnMaps, txtAddress,
          txtLocation);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
