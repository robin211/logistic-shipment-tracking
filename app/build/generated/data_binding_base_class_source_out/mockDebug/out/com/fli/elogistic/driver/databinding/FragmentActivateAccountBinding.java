// Generated by view binder compiler. Do not edit!
package com.fli.elogistic.driver.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.fli.elogistic.driver.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentActivateAccountBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout activateAccountFragmentLayout;

  @NonNull
  public final LinearLayout activateAccountLayout;

  @NonNull
  public final EditText activateVerificationConfirmPasswordET;

  @NonNull
  public final EditText activateVerificationEmailET;

  @NonNull
  public final EditText activateVerificationPasswordET;

  @NonNull
  public final Button activationVerifyBtn;

  @NonNull
  public final TextView btnVerifyCaptcha;

  @NonNull
  public final CheckBox checkTermOfService;

  @NonNull
  public final RelativeLayout confirmHolder;

  @NonNull
  public final ImageView hideBottom;

  @NonNull
  public final ImageView hidePassword;

  @NonNull
  public final ImageView hideTop;

  @NonNull
  public final Button navigatePassActivationFragmentBtn;

  @NonNull
  public final TextView title1;

  @NonNull
  public final LinearLayout tosHolder;

  @NonNull
  public final TextView txtLink;

  @NonNull
  public final ImageView viewBottom;

  @NonNull
  public final ImageView viewPassword;

  @NonNull
  public final ImageView viewTop;

  private FragmentActivateAccountBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout activateAccountFragmentLayout,
      @NonNull LinearLayout activateAccountLayout,
      @NonNull EditText activateVerificationConfirmPasswordET,
      @NonNull EditText activateVerificationEmailET,
      @NonNull EditText activateVerificationPasswordET, @NonNull Button activationVerifyBtn,
      @NonNull TextView btnVerifyCaptcha, @NonNull CheckBox checkTermOfService,
      @NonNull RelativeLayout confirmHolder, @NonNull ImageView hideBottom,
      @NonNull ImageView hidePassword, @NonNull ImageView hideTop,
      @NonNull Button navigatePassActivationFragmentBtn, @NonNull TextView title1,
      @NonNull LinearLayout tosHolder, @NonNull TextView txtLink, @NonNull ImageView viewBottom,
      @NonNull ImageView viewPassword, @NonNull ImageView viewTop) {
    this.rootView = rootView;
    this.activateAccountFragmentLayout = activateAccountFragmentLayout;
    this.activateAccountLayout = activateAccountLayout;
    this.activateVerificationConfirmPasswordET = activateVerificationConfirmPasswordET;
    this.activateVerificationEmailET = activateVerificationEmailET;
    this.activateVerificationPasswordET = activateVerificationPasswordET;
    this.activationVerifyBtn = activationVerifyBtn;
    this.btnVerifyCaptcha = btnVerifyCaptcha;
    this.checkTermOfService = checkTermOfService;
    this.confirmHolder = confirmHolder;
    this.hideBottom = hideBottom;
    this.hidePassword = hidePassword;
    this.hideTop = hideTop;
    this.navigatePassActivationFragmentBtn = navigatePassActivationFragmentBtn;
    this.title1 = title1;
    this.tosHolder = tosHolder;
    this.txtLink = txtLink;
    this.viewBottom = viewBottom;
    this.viewPassword = viewPassword;
    this.viewTop = viewTop;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentActivateAccountBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentActivateAccountBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_activate_account, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentActivateAccountBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout activateAccountFragmentLayout = (ConstraintLayout) rootView;

      id = R.id.activateAccountLayout;
      LinearLayout activateAccountLayout = rootView.findViewById(id);
      if (activateAccountLayout == null) {
        break missingId;
      }

      id = R.id.activateVerificationConfirmPasswordET;
      EditText activateVerificationConfirmPasswordET = rootView.findViewById(id);
      if (activateVerificationConfirmPasswordET == null) {
        break missingId;
      }

      id = R.id.activateVerificationEmailET;
      EditText activateVerificationEmailET = rootView.findViewById(id);
      if (activateVerificationEmailET == null) {
        break missingId;
      }

      id = R.id.activateVerificationPasswordET;
      EditText activateVerificationPasswordET = rootView.findViewById(id);
      if (activateVerificationPasswordET == null) {
        break missingId;
      }

      id = R.id.activationVerifyBtn;
      Button activationVerifyBtn = rootView.findViewById(id);
      if (activationVerifyBtn == null) {
        break missingId;
      }

      id = R.id.btn_verify_captcha;
      TextView btnVerifyCaptcha = rootView.findViewById(id);
      if (btnVerifyCaptcha == null) {
        break missingId;
      }

      id = R.id.check_term_of_service;
      CheckBox checkTermOfService = rootView.findViewById(id);
      if (checkTermOfService == null) {
        break missingId;
      }

      id = R.id.confirm_holder;
      RelativeLayout confirmHolder = rootView.findViewById(id);
      if (confirmHolder == null) {
        break missingId;
      }

      id = R.id.hide_bottom;
      ImageView hideBottom = rootView.findViewById(id);
      if (hideBottom == null) {
        break missingId;
      }

      id = R.id.hide_password;
      ImageView hidePassword = rootView.findViewById(id);
      if (hidePassword == null) {
        break missingId;
      }

      id = R.id.hide_top;
      ImageView hideTop = rootView.findViewById(id);
      if (hideTop == null) {
        break missingId;
      }

      id = R.id.navigatePassActivationFragmentBtn;
      Button navigatePassActivationFragmentBtn = rootView.findViewById(id);
      if (navigatePassActivationFragmentBtn == null) {
        break missingId;
      }

      id = R.id.title1;
      TextView title1 = rootView.findViewById(id);
      if (title1 == null) {
        break missingId;
      }

      id = R.id.tos_holder;
      LinearLayout tosHolder = rootView.findViewById(id);
      if (tosHolder == null) {
        break missingId;
      }

      id = R.id.txt_link;
      TextView txtLink = rootView.findViewById(id);
      if (txtLink == null) {
        break missingId;
      }

      id = R.id.view_bottom;
      ImageView viewBottom = rootView.findViewById(id);
      if (viewBottom == null) {
        break missingId;
      }

      id = R.id.view_password;
      ImageView viewPassword = rootView.findViewById(id);
      if (viewPassword == null) {
        break missingId;
      }

      id = R.id.view_top;
      ImageView viewTop = rootView.findViewById(id);
      if (viewTop == null) {
        break missingId;
      }

      return new FragmentActivateAccountBinding((ConstraintLayout) rootView,
          activateAccountFragmentLayout, activateAccountLayout,
          activateVerificationConfirmPasswordET, activateVerificationEmailET,
          activateVerificationPasswordET, activationVerifyBtn, btnVerifyCaptcha, checkTermOfService,
          confirmHolder, hideBottom, hidePassword, hideTop, navigatePassActivationFragmentBtn,
          title1, tosHolder, txtLink, viewBottom, viewPassword, viewTop);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
